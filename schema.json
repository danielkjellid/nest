{
    "openapi": "3.0.2",
    "info": {
        "title": "Nest API",
        "version": "1.0.0",
        "description": ""
    },
    "paths": {
        "/api/v1/products/add/": {
            "post": {
                "operationId": "nest_products_endpoints_product_add_product_add_api",
                "summary": "Product Add Api",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoneTypeAPIResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "title": "MultiPartBodyParams",
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "title": "Name",
                                        "help_text": "Plain name of product, should not include unit.",
                                        "component": null,
                                        "default_value": null,
                                        "placeholder": null,
                                        "hidden_label": false,
                                        "col_span": null,
                                        "section": null,
                                        "type": "string"
                                    },
                                    "gross_price": {
                                        "title": "Gross Price",
                                        "help_text": "Gross price of product, including VAT.",
                                        "component": null,
                                        "default_value": null,
                                        "placeholder": null,
                                        "hidden_label": false,
                                        "col_span": null,
                                        "section": null,
                                        "type": "string"
                                    },
                                    "unit": {
                                        "title": "Unit",
                                        "help_text": "Amount if product in selected unit type. E.g. 2 if 2 kg.",
                                        "component": null,
                                        "default_value": null,
                                        "placeholder": null,
                                        "hidden_label": false,
                                        "col_span": 1,
                                        "section": null,
                                        "type": "string"
                                    },
                                    "unit_type": {
                                        "title": "Unit Type",
                                        "help_text": null,
                                        "component": null,
                                        "default_value": null,
                                        "placeholder": null,
                                        "hidden_label": false,
                                        "col_span": 1,
                                        "section": null,
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/UnitType"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "supplier": {
                                        "title": "Supplier",
                                        "type": "string"
                                    },
                                    "is_available": {
                                        "title": "Is Available",
                                        "help_text": null,
                                        "component": null,
                                        "default_value": true,
                                        "placeholder": null,
                                        "hidden_label": false,
                                        "col_span": null,
                                        "section": null,
                                        "type": "boolean"
                                    },
                                    "thumbnail": {
                                        "title": "Thumbnail",
                                        "type": "file",
                                        "format": "binary",
                                        "placeholder": "Upload thumbnail"
                                    }
                                },
                                "required": [
                                    "name",
                                    "gross_price",
                                    "unit",
                                    "unit_type",
                                    "supplier",
                                    "is_available"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "SessionAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/add/form/": {
            "get": {
                "operationId": "nest_forms_api_view_form_api",
                "summary": "Generated form for payload ProductAddThumbnailIn",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecordAPIResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Form API is a generic class which returns a generated form from passed schema.\nAccessible through the @router.add_form(...) decorator.",
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "SessionAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/": {
            "get": {
                "operationId": "nest_products_endpoints_product_list_product_list_api",
                "summary": "Product List Api",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductListAPIResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get a list of all products in the application.",
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "SessionAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/import/": {
            "post": {
                "operationId": "nest_products_endpoints_product_import_product_import_api",
                "summary": "Product Import Api",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductImportOutAPIResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductImportIn"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "SessionAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/import/form/": {
            "get": {
                "operationId": "nest_forms_api_view_form_api",
                "summary": "Generated form for payload ProductImportIn",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecordAPIResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Form API is a generic class which returns a generated form from passed schema.\nAccessible through the @router.add_form(...) decorator.",
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "SessionAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/": {
            "get": {
                "operationId": "nest_users_endpoints_user_list_user_list_api",
                "summary": "User List Api",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListAPIResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get a list of all users in the application.",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "SessionAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "FormElementEnumRecord": {
                "title": "FormElementEnumRecord",
                "description": "A form block enum provides enum values to be used in a select.\n\n* name:\n    The display name of the enum property.\n\n* value:\n    The value to use.",
                "type": "object",
                "properties": {
                    "label": {
                        "title": "Label",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "label",
                    "value"
                ]
            },
            "FrontendComponents": {
                "title": "FrontendComponents",
                "description": "An enumeration.",
                "enum": [
                    "Autocomplete",
                    "Checkbox",
                    "Chip",
                    "ColorInput",
                    "FileInput",
                    "MultiSelect",
                    "NumberInput",
                    "PasswordInput",
                    "PinInput",
                    "Radio",
                    "Rating",
                    "Select",
                    "Slider",
                    "Switch",
                    "Textarea",
                    "TextInput"
                ]
            },
            "FormElementRecord": {
                "title": "FormElementRecord",
                "description": "A form element is a html element used to build a form. Can for example be a\ncheckbox, input, etc.\n\n* id:\n    The id to use for the form block. Used to set the id on the element itself, but\n    also in the FormSectionRecord to group elements in sections.\n\n* title:\n    Title of element. What the element is visually identified by.\n\n* type:\n    Type of element value. Set by generated definition spec.\n\n* enum:\n    Enumeration values in the form of FormElementEnumRecord available to use.\n\n* parent:\n    As we support nested schemas, the spec generated creates reference values which\n    we need later when we're going to post the form. Will effectively result in a\n    key-value property where the key is the parent id and value is the schema as an\n    object.\n\n* default_value:\n    The default value to use to prefill/preselect a value in the element.\n\n* component:\n    The frontend component to render of type FrontendComponents.\n\n* placeholder:\n    Placeholder value to pre-populate form element with.\n\n* help_text:\n    A str which can help guide the user or explain more about the value of the\n    element. Will appear as a text bellow the element.\n\n* hidden_label:\n    Set the label on top of the form element to only appear on screen readers.\n\n* section:\n    A section groups different elements of the form and adds them together in a\n    section.\n\n* col_span:\n    Column span of the element. Only valid if the element is part of a section with\n    defined amount of columns.",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "enum": {
                        "title": "Enum",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormElementEnumRecord"
                        }
                    },
                    "parent": {
                        "title": "Parent",
                        "type": "string"
                    },
                    "defaultValue": {
                        "title": "Default Value",
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "component": {
                        "$ref": "#/components/schemas/FrontendComponents"
                    },
                    "placeholder": {
                        "title": "Placeholder",
                        "type": "string"
                    },
                    "helpText": {
                        "title": "Help Text",
                        "type": "string"
                    },
                    "hiddenLabel": {
                        "title": "Hidden Label",
                        "default": false,
                        "type": "boolean"
                    },
                    "section": {
                        "title": "Section",
                        "type": "string"
                    },
                    "colSpan": {
                        "title": "Col Span",
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "FormRecord": {
                "title": "FormRecord",
                "description": "A form record represents a complete form.\n\n* key:\n    Effectively the \"id\" of the form.\n\n* is_multipart_form:\n    Convert the form to multipart before posting it to an endpoint.\n\n* expects_list:\n    Should be True if the endpoint in question expects a list of records instead of\n    a single record as payload. E.g. for bulk creation and so on.\n\n* required:\n    A list of form element ids that are required.\n\n* elements:\n    A list of all elements to render in the form.",
                "type": "object",
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string"
                    },
                    "isMultipartForm": {
                        "title": "Is Multipart Form",
                        "default": false,
                        "type": "boolean"
                    },
                    "columns": {
                        "title": "Columns",
                        "default": 1,
                        "type": "integer"
                    },
                    "expectsList": {
                        "title": "Expects List",
                        "default": false,
                        "type": "boolean"
                    },
                    "required": {
                        "title": "Required",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "elements": {
                        "title": "Elements",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormElementRecord"
                        }
                    }
                },
                "required": [
                    "key",
                    "required",
                    "elements"
                ]
            },
            "ProductListUnit": {
                "title": "ProductListUnit",
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "abbreviation": {
                        "title": "Abbreviation",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "abbreviation"
                ]
            },
            "ProductList": {
                "title": "ProductList",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "fullName": {
                        "title": "Full Name",
                        "type": "string"
                    },
                    "supplier": {
                        "title": "Supplier",
                        "type": "string"
                    },
                    "thumbnailUrl": {
                        "title": "Thumbnail Url",
                        "type": "string"
                    },
                    "isAvailable": {
                        "title": "Is Available",
                        "type": "boolean"
                    },
                    "odaUrl": {
                        "title": "Oda Url",
                        "type": "string"
                    },
                    "odaId": {
                        "title": "Oda Id",
                        "type": "integer"
                    },
                    "grossPrice": {
                        "title": "Gross Price",
                        "type": "string"
                    },
                    "grossUnitPrice": {
                        "title": "Gross Unit Price",
                        "type": "string"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ProductListUnit"
                    },
                    "unitQuantity": {
                        "title": "Unit Quantity",
                        "type": "string"
                    },
                    "isSynced": {
                        "title": "Is Synced",
                        "type": "boolean"
                    },
                    "lastSyncedAt": {
                        "title": "Last Synced At",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "full_name",
                    "supplier",
                    "is_available",
                    "gross_price",
                    "unit",
                    "is_synced"
                ]
            },
            "ProductImportOut": {
                "title": "ProductImportOut",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "odaUrl": {
                        "title": "Oda Url",
                        "type": "string"
                    },
                    "grossPrice": {
                        "title": "Gross Price",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "oda_url",
                    "gross_price"
                ]
            },
            "ProductImportIn": {
                "title": "ProductImportIn",
                "type": "object",
                "properties": {
                    "odaProductId": {
                        "title": "Oda Product Id",
                        "helpText": "Product Id at Oda.",
                        "component": null,
                        "defaultValue": null,
                        "placeholder": null,
                        "hiddenLabel": false,
                        "colSpan": null,
                        "section": null,
                        "type": "string"
                    }
                },
                "required": [
                    "oda_product_id"
                ]
            },
            "UserListHome": {
                "title": "UserListHome",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "address": {
                        "title": "Address",
                        "type": "string"
                    },
                    "isActive": {
                        "title": "Is Active",
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "address",
                    "is_active"
                ]
            },
            "UserList": {
                "title": "UserList",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "fullName": {
                        "title": "Full Name",
                        "type": "string"
                    },
                    "isActive": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "isStaff": {
                        "title": "Is Staff",
                        "type": "boolean"
                    },
                    "isSuperuser": {
                        "title": "Is Superuser",
                        "type": "boolean"
                    },
                    "home": {
                        "$ref": "#/components/schemas/UserListHome"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "full_name",
                    "is_active",
                    "is_staff",
                    "is_superuser"
                ]
            },
            "NoneTypeAPIResponse": {
                "title": "NoneTypeAPIResponse",
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "enum": [
                            "success",
                            "error"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "null"
                    }
                },
                "required": [
                    "status",
                    "data"
                ]
            },
            "FormRecordAPIResponse": {
                "title": "FormRecordAPIResponse",
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "enum": [
                            "success",
                            "error"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/FormRecord"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "ProductListAPIResponse": {
                "title": "ProductListAPIResponse",
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "enum": [
                            "success",
                            "error"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductList"
                        }
                    }
                },
                "required": [
                    "status"
                ]
            },
            "ProductImportOutAPIResponse": {
                "title": "ProductImportOutAPIResponse",
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "enum": [
                            "success",
                            "error"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ProductImportOut"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "UserListAPIResponse": {
                "title": "UserListAPIResponse",
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "enum": [
                            "success",
                            "error"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserList"
                        }
                    }
                },
                "required": [
                    "status"
                ]
            }
        },
        "securitySchemes": {
            "SessionAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "servers": null
}
[tool.poetry]
name = "nest"
version = "0.1.0"
description = "Nest is a project for managing my home (nest)"
authors = ["Daniel Kjellid <daniel.kjellid@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.11.1"
ipython = "^8.17.2"
structlog = "^23.1.0"
django = "^4.2.7"
django-ninja = "^0.21.0"
django-environ = "^0.10.0"
django-extensions = "^3.2.3"
django-storages = { version = "^1.13.2", extras = ["aws"] }
pydantic = "^1.10.5"
django-vite = "^2.0.2"
django-s3-storage = "^0.15.0"
orjson = "^3.9.10"
django-hijack = "^3.4.5"
requests = "^2.28.2"
pillow = "^9.5.0"
click = "^8.1.7"
gunicorn = "^20.1.0"
sentry-sdk = "^1.21.1"
whitenoise = "^6.4.0"
isodate = "^0.6.1"
django-store-kit = "^0.1.2"
urllib3 = "^2.0.7"
psycopg2 = "^2.9.9"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.4"
mypy = "^1.2"
django-stubs = "^4.2.7"
django-debug-toolbar = "^3.8.1"
types-requests = "^2.31.0.6"
deptry = "^0.12.0"


[tool.poetry.group.test.dependencies]
polyfactory = "^2.11.0"
pytest = "^7.4.3"
pytest-pretty = "^1.2.0"
pytest-env = "^0.8.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-lazy-fixture = "^0.6.3"
pytest-xdist = "^3.2.1"
pytest-django = "^4.5.2"
requests-mock = "^1.11.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#########
# Black #
#########

[tool.black]
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = 'revisions'
safe = true

########
# Mypy #
########

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy", "mypy_django_plugin.main"]
follow_imports = "normal"
ignore_missing_imports = true
strict = true

disallow_subclassing_any = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.django-stubs]
django_settings_module = "nest.settings"

[[tool.mypy.overrides]]
module = "nest.*.tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "nest.*.migrations.*"
ignore_errors = true

########
# Ruff #
########

[tool.ruff]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "conftest.py",
    "migrations"
]
select = [
    # Regular flake8 rules
    "C", "E", "F", "W",
    # flake8-bugbear rules
    "B",
    "I",
    # Pylint rules
    "PLC", "PLE", "PLR", "PLW",
    "RUF",
]
ignore = [
    # C408: Unnecessary <dict/list/tuple> call - rewrite as a literal
    "C408",
    # B905: zip() without explicit strict,
    "B905",
    # E501: Leave line-length stuff for black to deal with
    "E501",
    # Disable magic value comparison. They're perfectly valid in tests and quite a few
    "PLR2004",
]
[tool.ruff.pylint]
max-args = 10

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "parents"

##########
# Pytest #
##########

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["nest", "tests"]
python_files = "test_*.py"
# Include captured log messages in system-out in CI report file
junit_logging = "system-out"
# --- pytest-django settings
DJANGO_SETTINGS_MODULE = "nest.settings"
# --- pytest-env settings
env = ["ENV_PATH=.env.test"]


##########
# Deptry #
##########

[tool.deptry]
extend_exclude = [".*tests.*"]

[tool.deptry.per_rule_ignores]
# Installed, but not explicitly imported
DEP002 = [
    "psycopg2",
    "ipython",
    "django-storages",
    "django-vite",
    "pillow",
    "gunicorn",
    "whitenoise"
]
# Dev dependencies that are imported in the codebase
DEP004 = ["debug_toolbar"]
